map $http_referer $allow_origin {
    default "";
    "~^(?<captured_origin>https://app\.ilastik\.org)(/.*)?$" $captured_origin;
    # "~^(?<captured_origin>https?://dev\.web\.ilastik\.org)(/.*)?$" $captured_origin;
    # "~^(?<captured_origin>https?://localhost(:[0-9]+)?)(/.*)?$" $captured_origin;
}

add_header "Access-Control-Allow-Origin" $allow_origin always;
add_header 'Access-Control-Allow-Credentials' 'true' always;
add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

server {
  server_name app.ilastik.org;

  #listen 443 ssl;
  #ssl_certificate /etc/webilastik/app.ilastik.org.pem;
  #ssl_certificate_key /etc/webilastik/app.ilastik.org-key.pem;

  if ($request_method = OPTIONS ) {
    return 200;
  }

  location /public/{
    alias /opt/webilastik/public/;
  }

  location ~ ^/session-(?<session_id>[^/]+)/ws{
    rewrite /([^/]+)/(.+) /$2 break;

    proxy_pass http://unix:/tmp/to-session-$session_id;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
 }

  location ~ ^/session-(?<session_id>[^/]+){
    rewrite /([^/]+)/(.+) /$2 break;

    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_redirect off;
    proxy_buffering off;
    proxy_pass http://unix:/tmp/to-session-$session_id;
  }

  location / {
    proxy_pass http://localhost:5000;
    proxy_read_timeout 60s;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
  }
}
